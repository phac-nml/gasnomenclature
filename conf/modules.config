/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    // Publish directory names
    profile_dists_directory_name = "distances"
    gas_call_directory_name = "call"

    locidex_merge_ref_directory_name = [params.outdir , "locidex", "merge"].join(File.separator)
    locidex_merge_query_directory_name = [params.outdir , "locidex", "merge"].join(File.separator)

    locidex_concat_ref_directory_name = [params.outdir , "locidex", "concat", "reference"].join(File.separator)
    locidex_concat_query_directory_name = [params.outdir , "locidex", "concat", "query"].join(File.separator)

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: LOCIDEX_MERGE_REF {
        publishDir = [
            path: locidex_merge_ref_directory_name,
            mode: params.publish_dir_mode,
            pattern:  "ref/{MLST_error_report,profile}.{csv,tsv}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: LOCIDEX_MERGE_QUERY {
        publishDir = [
            path: locidex_merge_query_directory_name,
            mode: params.publish_dir_mode,
            pattern:  "query/{MLST_error_report,profile}.{csv,tsv}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: LOCIDEX_CONCAT_REF {
        publishDir = [
            path: locidex_concat_ref_directory_name,
            mode: params.publish_dir_mode,
            pattern:  "{MLST_error_report_,profile_}concat_ref.{csv,tsv}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: LOCIDEX_CONCAT_QUERY {
        publishDir = [
            path: locidex_concat_query_directory_name,
            mode: params.publish_dir_mode,
            pattern:  "{MLST_error_report_,profile_}concat_query.{csv,tsv}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: PROFILE_DISTS {
        publishDir = [
            path: { ["${params.outdir}", "${task.profile_dists_directory_name}"].join(File.separator) },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null :
                filename.contains(File.separator) ? filename.split(File.separator)[-1] : filename }
        ]
    }

    withName: GAS_CALL {
        publishDir = [
            [
                path: { ["${params.outdir}", "${task.gas_call_directory_name}"].join(File.separator) },
                mode: params.publish_dir_mode,
                pattern: "*/thresholds.json"
            ],
            [
                path: { ["${params.outdir}", "${task.gas_call_directory_name}"].join(File.separator) },
                mode: params.publish_dir_mode,
                pattern: "*/results.{text,parquet}"
            ],
            [
                path: { ["${params.outdir}", "${task.gas_call_directory_name}"].join(File.separator) },
                mode: params.publish_dir_mode,
                pattern: "*/run.json"
            ]
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}
