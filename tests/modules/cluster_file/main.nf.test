nextflow_process {
    name "Test Process CLUSTER_FILE"
    script "modules/local/cluster_file/main.nf"
    process "CLUSTER_FILE"

    test("Test when sample levels are equal") {

        when {
            process {
                """
                input[0] = Channel.of(
                    [['id':'sample1', 'genomic_address_name':'1.1.1'],
                    ['id':'sample2', 'genomic_address_name':'1.1.1'],
                    ['id':'sample3', 'genomic_address_name':'1.1.2']]
                    )
                """
            }

            params {
                outdir = "cluster_results"
            }
        }

        then {
            assert process.success
            assert path("$launchDir/cluster_results").exists()

            // Check reference_clusters file
            def actual_clusters = path("$launchDir/cluster_results/cluster/clusters.tsv")
            def expected_clusters = path("$baseDir/tests/data/clusters/expected_clusters.txt")
            assert actual_clusters.text == expected_clusters.text
        }
    }

    test("Test when sample levels are different") {

        when {
            process {
                """
                input[0] = Channel.of(
                    [['id':'sample1', 'genomic_address_name':'1.1.1'],
                    ['id':'sample2', 'genomic_address_name':'1.1.1'],
                    ['id':'sample3', 'genomic_address_name':'1.2']]
                    )
                """
            }

            params {
                outdir = "cluster_results"
            }
        }

        then {
            assert process.failed
            assert (process.stdout =~ /Inconsistent levels found: expected 3 levels but found 2 levels in sample3/).find()
        }
    }
}
